{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\OneDrive\\\\Desktop\\\\Hackathon\\\\3M1K\\\\threemonek\\\\src\\\\components\\\\Sidebar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Sidebar(props) {\n  _s();\n  const [chatContacts, setChatContacts] = useState([]);\n  useEffect(() => {\n    // Fetch chat contacts from the backend\n    // Replace the URL with your actual backend API endpoint\n    fetch(\"https://your-backend-api.com/chat-contacts\", {\n      method: \"GET\",\n      headers: {\n        // Include any necessary headers (e.g., authentication headers)\n        // ...\n      }\n    }).then(response => response.json()).then(data => {\n      // Update the state with the fetched chat contacts\n      setChatContacts(data.contacts);\n    }).catch(error => {\n      console.error(\"Error fetching chat contacts:\", error);\n    });\n  }, []); // The empty dependency array ensures that this effect runs only once when the component mounts\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-contacts\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Chat Contacts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: chatContacts.map(contact => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: contact.username\n          }, contact.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(Sidebar, \"R9AnJk73k6RZByefD5AiWoUm21s=\");\n_c = Sidebar;\nvar _c;\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","Sidebar","props","_s","chatContacts","setChatContacts","fetch","method","headers","then","response","json","data","contacts","catch","error","console","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","contact","username","id","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/OneDrive/Desktop/Hackathon/3M1K/threemonek/src/components/Sidebar.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nexport default function Sidebar(props) {\r\n  const [chatContacts, setChatContacts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch chat contacts from the backend\r\n    // Replace the URL with your actual backend API endpoint\r\n    fetch(\"https://your-backend-api.com/chat-contacts\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        // Include any necessary headers (e.g., authentication headers)\r\n        // ...\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        // Update the state with the fetched chat contacts\r\n        setChatContacts(data.contacts);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching chat contacts:\", error);\r\n      });\r\n  }, []); // The empty dependency array ensures that this effect runs only once when the component mounts\r\n\r\n  return (\r\n    <>\r\n      <div className=\"sidebar\">\r\n        <div className=\"chat-contacts\">\r\n          <h2>Chat Contacts</h2>\r\n          <ul>\r\n            {chatContacts.map((contact) => (\r\n              <li key={contact.id}>{contact.username}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEnD,eAAe,SAASC,OAAOA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACrC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACd;IACA;IACAU,KAAK,CAAC,4CAA4C,EAAE;MAClDC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP;QACA;MAAA;IAEJ,CAAC,CAAC,CACCC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACd;MACAP,eAAe,CAACO,IAAI,CAACC,QAAQ,CAAC;IAChC,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACvD,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEjB,OAAA,CAAAE,SAAA;IAAAiB,QAAA,eACEnB,OAAA;MAAKoB,SAAS,EAAC,SAAS;MAAAD,QAAA,eACtBnB,OAAA;QAAKoB,SAAS,EAAC,eAAe;QAAAD,QAAA,gBAC5BnB,OAAA;UAAAmB,QAAA,EAAI;QAAa;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACtBxB,OAAA;UAAAmB,QAAA,EACGb,YAAY,CAACmB,GAAG,CAAEC,OAAO,iBACxB1B,OAAA;YAAAmB,QAAA,EAAsBO,OAAO,CAACC;UAAQ,GAA7BD,OAAO,CAACE,EAAE;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAwB,CAC5C;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC,gBACN,CAAC;AAEP;AAACnB,EAAA,CArCuBF,OAAO;AAAA0B,EAAA,GAAP1B,OAAO;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}